{"version":3,"file":"static/chunks/app/layout-d0855ddaf590c86f.js","mappings":"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","sources":["webpack://_N_E/?c941","webpack://_N_E/./node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","webpack://_N_E/./components/Navbar/navbar.config.ts","webpack://_N_E/./components/Navbar/MobileMenu.tsx","webpack://_N_E/./components/Navbar/Navbar.tsx","webpack://_N_E/./app/globals.css","webpack://_N_E/./node_modules/next/font/google/target.css","webpack://_N_E/./node_modules/next/font/google/target.css?fb2b"],"sourcesContent":["import(/* webpackMode: \"eager\", webpackExports: [\"Navbar\"] */ \"/home/zurtrah/pontocardce/components/Navbar/Navbar.tsx\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"__esModule\",\"default\"] */ \"/home/zurtrah/pontocardce/node_modules/next/dist/client/app-dir/link.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/home/zurtrah/pontocardce/node_modules/next/font/google/target.css?{\\\"path\\\":\\\"app/layout.tsx\\\",\\\"import\\\":\\\"Geist\\\",\\\"arguments\\\":[{\\\"variable\\\":\\\"--font-geist-sans\\\",\\\"subsets\\\":[\\\"latin\\\"]}],\\\"variableName\\\":\\\"geistSans\\\"}\");\n;\nimport(/* webpackMode: \"eager\" */ \"/home/zurtrah/pontocardce/node_modules/next/font/google/target.css?{\\\"path\\\":\\\"app/layout.tsx\\\",\\\"import\\\":\\\"Geist_Mono\\\",\\\"arguments\\\":[{\\\"variable\\\":\\\"--font-geist-mono\\\",\\\"subsets\\\":[\\\"latin\\\"]}],\\\"variableName\\\":\\\"geistMono\\\"}\");\n;\nimport(/* webpackMode: \"eager\" */ \"/home/zurtrah/pontocardce/app/globals.css\");\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const parent = element.offsetParent;\n            const parentWidth = parent instanceof HTMLElement ? parent.offsetWidth || 0 : 0;\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n            size.right = parentWidth - size.width - size.left;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent, anchorX }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left, right } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        const x = anchorX === \"left\" ? `left: ${left}` : `right: ${right}`;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            ${x}px !important;\n            top: ${top}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useCallback, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, anchorX, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const memoizedOnExitComplete = useCallback((childId) => {\n        presenceChildren.set(childId, true);\n        for (const isComplete of presenceChildren.values()) {\n            if (!isComplete)\n                return; // can stop searching when any is incomplete\n        }\n        onExitComplete && onExitComplete();\n    }, [presenceChildren, onExitComplete]);\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: memoizedOnExitComplete,\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout\n        ? [Math.random(), memoizedOnExitComplete]\n        : [isPresent, memoizedOnExitComplete]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = (jsx(PopChild, { isPresent: isPresent, anchorX: anchorX, children: children }));\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, anchorX = \"left\", }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return null;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender === null || forceRender === void 0 ? void 0 : forceRender();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && (safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove());\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, anchorX: anchorX, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","import type { Variants } from \"framer-motion\";\n\nexport const APP_NAV_LINKS = [\n  { href: \"/relogio-de-ponto\", label: \"Relógio de Ponto\" },\n  { href: \"/catracas\", label: \"Catracas\" },\n  { href: \"/softwares\", label: \"Softwares\" },\n  { href: \"/suporte\", label: \"Suporte\" },\n  { href: \"/contato\", label: \"Contato\" },\n  { href: \"/sobre-nos\", label: \"Sobre\" },\n] as const;\n\nexport const NAV_ANIMATION_VARIANTS: Record<string, Variants> = {\n  menu: {\n    closed: { opacity: 0, y: -20, transition: { duration: 0.2 } },\n    open: { \n      opacity: 1, \n      y: 0, \n      transition: { type: \"spring\", stiffness: 300, damping: 24 } \n    }\n  },\n  icon: {\n    closed: { rotate: 0 },\n    open: { rotate: 45 }\n  }\n};","\n\nimport { motion } from \"framer-motion\";\nimport Link from \"next/link\";\nimport { APP_NAV_LINKS, NAV_ANIMATION_VARIANTS } from \"./navbar.config\";\n\ntype MobileMenuProps = {\n  isOpen: boolean;\n  onClose: () => void;\n};\n\nexport const MobileMenu = ({ isOpen, onClose }: MobileMenuProps) => (\n  <motion.div\n    initial=\"closed\"\n    animate={isOpen ? \"open\" : \"closed\"}\n    exit=\"closed\"\n    variants={NAV_ANIMATION_VARIANTS.menu}\n    className=\"md:hidden bg-[#32313e]/80 backdrop-blur-sm shadow-lg flex flex-col gap-4 p-6\"\n  >\n    {APP_NAV_LINKS.map((link) => (\n      <Link\n        key={link.href}\n        href={link.href}\n        onClick={onClose}\n        className=\"text-white hover:text-[#125f0b] transition-colors py-2 text-sm\"\n      >\n        {link.label}\n      </Link>\n    ))}\n    \n    <Link\n      href=\"https://wa.me/8532262933\"\n      target=\"_blank\"\n      rel=\"noopener\"\n      className=\"bg-[#177f0f] text-white rounded-md px-4 py-2 hover:bg-[#125f0b] transition-colors text-center\"\n    >\n      Solicitar Demonstração\n    </Link>\n  </motion.div>\n);","\"use client\";\n\nimport { useState, useEffect } from \"react\"; // Adicione useEffect\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport Link from \"next/link\";\nimport Image from \"next/image\";\nimport { APP_NAV_LINKS, NAV_ANIMATION_VARIANTS } from \"./navbar.config\";\nimport { MobileMenu } from \"./MobileMenu\";\n\nexport const Navbar = () => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [isMounted, setIsMounted] = useState(false); // Novo estado\n\n  // Garante que animações só rodem no client\n  useEffect(() => {\n    setIsMounted(true);\n  }, []);\n\n  if (!isMounted) {\n    return (\n      <div className=\"bg-[#202220]/80 backdrop-blur-sm fixed w-full top-0 z-50 shadow-md\">\n        {/* Layout estático para SSR */}\n        <nav className=\"container mx-auto px-6 py-4 flex justify-between items-center\">\n          <Link href=\"/\">\n            <Image\n              src=\"/LOGO.png\"\n              alt=\"Controle de Acesso\"\n              width={160}\n              height={32}\n              priority\n            />\n          </Link>\n          <div className=\"md:hidden opacity-0\">Menu</div>\n        </nav>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-[#202220]/80 backdrop-blur-sm fixed w-full top-0 z-50 shadow-md\">\n      <nav className=\"container mx-auto px-6 py-4 flex justify-between items-center\">\n        {/* Logo */}\n        <Link href=\"/\" className=\"hover:opacity-80 transition-opacity\">\n          <Image\n            src=\"/LOGO.png\"\n            alt=\"Controle de Acesso\"\n            width={250}\n            height={70}\n            priority\n          />\n        </Link>\n\n        {/* Desktop Navigation */}\n        <div className=\"hidden md:flex items-center gap-8\">\n          {APP_NAV_LINKS.map((link) => (\n            <Link\n              key={link.href}\n              href={link.href}\n              className=\"text-white hover:text-[#125f0b] transition-colors text-sm\"\n            >\n              {link.label}\n            </Link>\n          ))}\n\n          <Link\n            href=\"https://wa.me/8532262933\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            className=\"bg-[#177f0f] text-white px-4 py-2 rounded-md hover:bg-[#125f0b] transition-colors text-sm\"\n          >\n            Solicitar Demonstração\n          </Link>\n        </div>\n\n        {/* Mobile Menu Button */}\n        <motion.button\n          className=\"md:hidden text-white p-2\"\n          onClick={() => setIsMenuOpen(!isMenuOpen)}\n          animate={isMenuOpen ? \"open\" : \"closed\"}\n          variants={NAV_ANIMATION_VARIANTS.icon}\n        >\n          <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n            <motion.path\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              d={isMenuOpen ? \"M6 6L18 18\" : \"M4 6H20\"}\n            />\n            <motion.path\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              d=\"M4 12H20\"\n              animate={{ opacity: isMenuOpen ? 0 : 1 }}\n            />\n            <motion.path\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              d={isMenuOpen ? \"M6 18L18 6\" : \"M4 18H20\"}\n            />\n          </svg>\n        </motion.button>\n      </nav>\n\n      {/* Mobile Menu */}\n      <AnimatePresence>\n        {isMenuOpen && <MobileMenu isOpen={isMenuOpen} onClose={() => setIsMenuOpen(false)} />}\n      </AnimatePresence>\n    </div>\n  );\n};","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":{\"fontFamily\":\"'Geist', 'Geist Fallback'\",\"fontStyle\":\"normal\"},\"className\":\"__className_4d318d\",\"variable\":\"__variable_4d318d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":{\"fontFamily\":\"'Geist Mono', 'Geist Mono Fallback'\",\"fontStyle\":\"normal\"},\"className\":\"__className_ea5f4b\",\"variable\":\"__variable_ea5f4b\"};"],"names":["PopChildMeasure","React","getSnapshotBeforeUpdate","prevProps","element","props","childRef","current","isPresent","parent","offsetParent","parentWidth","HTMLElement","offsetWidth","size","sizeRef","height","offsetHeight","width","top","offsetTop","left","offsetLeft","right","componentDidUpdate","render","children","PopChild","anchorX","id","useId","ref","useRef","nonce","useContext","MotionConfigContext","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","x","removeChild","jsx","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","memoizedOnExitComplete","useCallback","isComplete","set","childId","values","context","useMemo","register","delete","Math","random","forEach","_","key","PresenceContext","Provider","value","Map","AnimatePresence","propagate","isParentPresent","safeToRemove","usePresence","presentChildren","onlyElements","presentKeys","map","getChildKey","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","useIsomorphicLayoutEffect","i","length","includes","get","join","exitingChildren","nextChildren","child","splice","push","forceRender","LayoutGroupContext","Fragment","undefined","onExit","has","isEveryExitComplete","isExitComplete","APP_NAV_LINKS","href","label","menu","closed","opacity","y","transition","duration","open","type","stiffness","damping","icon","rotate","isOpen","onClose","motion","div","animate","exit","variants","NAV_ANIMATION_VARIANTS","className","Link","link","onClick","target","rel","isMenuOpen","setIsMenuOpen","isMounted","setIsMounted","useEffect","nav","Image","src","alt","priority","button","svg","viewBox","fill","path","stroke","strokeWidth","d","MobileMenu"],"sourceRoot":"","ignoreList":[1,2,3,4,9,10]}